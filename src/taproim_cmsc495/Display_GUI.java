//Gunar Gorder, Brandon Dent, Frank Montoya, Kent Kenyon, Spencer Ward
//TAMPROW IM FINAL PROJECT
//CMSC 495 6380
//9-27-15
//Display_GUI.java
package taproim_cmsc495;
import java.util.*;
import javax.swing.*;


public class Display_GUI extends javax.swing.JFrame {

    /**
     * Creates new form Display_GUI
     */
    public Display_GUI() {
        this.setTitle("                               "
                + "                                         "
                + "                      TAPRO-IM SYSTEMS");
        //getContentPane().setBackground(Color.GRAY);
        initComponents();
        newShipmentPanel.setVisible(false);
        updateInventoryPanel.setVisible(false);
        updateCustomerPanel.setVisible(false);
        updateShipmentPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newShipmentButton = new javax.swing.JButton();
        updateCustomerButton = new javax.swing.JButton();
        updateInventoryButton = new javax.swing.JButton();
        updateShipmentButton = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        tableLabel = new javax.swing.JLabel();
        viewInventoryTableButton = new javax.swing.JButton();
        viewShipmentTableButton = new javax.swing.JButton();
        viewCustomerTableButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        newShipmentPanel = new javax.swing.JPanel();
        customerNameLabel = new javax.swing.JLabel();
        customerNameField = new javax.swing.JTextField();
        customerIDLabel = new javax.swing.JLabel();
        customerIDField = new javax.swing.JTextField();
        customerAddressButton = new javax.swing.JLabel();
        customerAddressField = new javax.swing.JTextField();
        itemIDButton = new javax.swing.JLabel();
        itemIDField = new javax.swing.JTextField();
        itemCountButton = new javax.swing.JLabel();
        itemCountField = new javax.swing.JTextField();
        itemWeightButton = new javax.swing.JLabel();
        itemWeightField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        clearAllButton = new javax.swing.JButton();
        notificationLabel = new javax.swing.JLabel();
        destinationLabel = new javax.swing.JLabel();
        destinationField = new javax.swing.JTextField();
        customerEmailLabel = new javax.swing.JLabel();
        customerEmailField = new javax.swing.JTextField();
        shipmentIDLabel = new javax.swing.JLabel();
        shipmentIDField = new javax.swing.JTextField();
        updateInventoryPanel = new javax.swing.JPanel();
        itemIDUpdateLabel = new javax.swing.JLabel();
        itemWeightUpdateLabel = new javax.swing.JLabel();
        itemStockLevelUpdateLabel = new javax.swing.JLabel();
        itemDescriptionUpdateLabel = new javax.swing.JLabel();
        itemIDUpdateField = new javax.swing.JTextField();
        itemWeightUpdateField = new javax.swing.JTextField();
        itemStockLevelUpdateField = new javax.swing.JTextField();
        itemDescriptionUpdateField = new javax.swing.JTextField();
        updateInventoryButtonFinal = new javax.swing.JButton();
        deleteInventoryButton = new javax.swing.JButton();
        notificationInventoryUpdateLabel = new javax.swing.JLabel();
        searchInventoryButton = new javax.swing.JButton();
        updateCustomerPanel = new javax.swing.JPanel();
        customerIDCustomerUpdateLabel = new javax.swing.JLabel();
        customerIDCustomerUpdateField = new javax.swing.JTextField();
        customerNameUpdateLabel = new javax.swing.JLabel();
        customerAddressUpdateLabel = new javax.swing.JLabel();
        customerNameUpdateField = new javax.swing.JTextField();
        customerAddressUpdateField = new javax.swing.JTextField();
        updateCustomerButtonFinal = new javax.swing.JButton();
        notificationCustomerUpdateLabel = new javax.swing.JLabel();
        customerEmailUpdateLabel = new javax.swing.JLabel();
        customerEmailUpdateField = new javax.swing.JTextField();
        searchUpdateCustomerButton = new javax.swing.JButton();
        deleteCustomerButton = new javax.swing.JButton();
        updateShipmentPanel = new javax.swing.JPanel();
        shipmentIDUpdateLabel = new javax.swing.JLabel();
        shipmentIDUpdateField = new javax.swing.JTextField();
        itemIDUpdateShipmentLabel = new javax.swing.JLabel();
        itemIDUpdateShipmentField = new javax.swing.JTextField();
        customerIDUpdateShipmentLabel = new javax.swing.JLabel();
        customerIDUpdateShipmentField = new javax.swing.JTextField();
        updateShipmentButtonFinal = new javax.swing.JButton();
        notificationShipmentUpdateLabel = new javax.swing.JLabel();
        itemDestinationUpdateShipmentLabel = new javax.swing.JLabel();
        itemDestinationUpdateShipmentField = new javax.swing.JTextField();
        itemLocationUpdateShipmentLabel = new javax.swing.JLabel();
        itemWeightUpdateShipmentLabel = new javax.swing.JLabel();
        itemCountUpdateShipmentLabel = new javax.swing.JLabel();
        trackingNumberUpdateShipmentLabel = new javax.swing.JLabel();
        carrierUpdateShipmentLabel = new javax.swing.JLabel();
        signerUpdateShipmentLabel = new javax.swing.JLabel();
        itemLocationUpdateShipmentField = new javax.swing.JTextField();
        itemWeightUpdateShipmentField = new javax.swing.JTextField();
        itemCountUpdateShipmentField = new javax.swing.JTextField();
        trackingNumberUpdateShipmentField = new javax.swing.JTextField();
        carrierUpdateShipmentField = new javax.swing.JTextField();
        signerUpdateShipmentField = new javax.swing.JTextField();
        deleteShipmentButton = new javax.swing.JButton();
        searchUpdateShipmentButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newShipmentButton.setText("NEW SHIPMENT");
        newShipmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newShipmentButtonActionPerformed(evt);
            }
        });

        updateCustomerButton.setText("UPDATE CUSTOMER");
        updateCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCustomerButtonActionPerformed(evt);
            }
        });

        updateInventoryButton.setText("UPDATE INVENTORY");
        updateInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInventoryButtonActionPerformed(evt);
            }
        });

        updateShipmentButton.setText("UPDATE SHIPMENT");
        updateShipmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateShipmentButtonActionPerformed(evt);
            }
        });

        tablePanel.setBackground(new java.awt.Color(204, 204, 204));
        tablePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 102)));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        tableLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tableLabel.setText("      TABLE DISPLAY");

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(251, 251, 251))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(tableLabel)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        viewInventoryTableButton.setText("VIEW INVENTORY TABLE");
        viewInventoryTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInventoryTableButtonActionPerformed(evt);
            }
        });

        viewShipmentTableButton.setText("VIEW SHIPMENT TABLE");
        viewShipmentTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewShipmentTableButtonActionPerformed(evt);
            }
        });

        viewCustomerTableButton.setText("VIEW CUSTOMER TABLE");
        viewCustomerTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCustomerTableButtonActionPerformed(evt);
            }
        });

        logOutButton.setText("LOG OUT");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        newShipmentPanel.setEnabled(false);

        customerNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerNameLabel.setText("Customer Name:");

        customerIDLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerIDLabel.setText("Customer ID:");
        customerIDLabel.setEnabled(false);

        customerIDField.setEnabled(false);

        customerAddressButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerAddressButton.setText("Customer Address:");

        itemIDButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemIDButton.setText("Item ID Number:");

        itemCountButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemCountButton.setText("Item Count:");

        itemWeightButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemWeightButton.setText("Item Weight:");

        submitButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        clearAllButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        clearAllButton.setText("CLEAR ALL");
        clearAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllButtonActionPerformed(evt);
            }
        });

        notificationLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        notificationLabel.setForeground(new java.awt.Color(102, 0, 0));

        destinationLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        destinationLabel.setText("Destination:");

        customerEmailLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerEmailLabel.setText("Customer Email:");

        shipmentIDLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shipmentIDLabel.setText("Shipment ID:");
        shipmentIDLabel.setEnabled(false);

        shipmentIDField.setEnabled(false);

        javax.swing.GroupLayout newShipmentPanelLayout = new javax.swing.GroupLayout(newShipmentPanel);
        newShipmentPanel.setLayout(newShipmentPanelLayout);
        newShipmentPanelLayout.setHorizontalGroup(
            newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newShipmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newShipmentPanelLayout.createSequentialGroup()
                        .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(shipmentIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customerEmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(destinationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemWeightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemCountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemIDButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customerAddressButton, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(customerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerNameField)
                            .addComponent(customerAddressField)
                            .addComponent(itemIDField)
                            .addComponent(itemCountField)
                            .addComponent(destinationField)
                            .addComponent(customerEmailField)
                            .addComponent(itemWeightField)
                            .addComponent(shipmentIDField)))
                    .addGroup(newShipmentPanelLayout.createSequentialGroup()
                        .addComponent(customerIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newShipmentPanelLayout.createSequentialGroup()
                                .addComponent(submitButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearAllButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addComponent(customerIDField))))
                .addContainerGap())
        );
        newShipmentPanelLayout.setVerticalGroup(
            newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newShipmentPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerAddressButton)
                    .addComponent(customerAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerEmailLabel)
                    .addComponent(customerEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemIDButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(destinationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemWeightButton)
                    .addComponent(itemWeightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemCountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemCountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shipmentIDLabel)
                    .addComponent(shipmentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clearAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jLayeredPane1.add(newShipmentPanel);
        newShipmentPanel.setBounds(10, 0, 710, 410);

        itemIDUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemIDUpdateLabel.setText("Item ID:");

        itemWeightUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemWeightUpdateLabel.setText("Item Weight:");

        itemStockLevelUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemStockLevelUpdateLabel.setText("Item Stock Level:");

        itemDescriptionUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemDescriptionUpdateLabel.setText("Item Description:");

        itemWeightUpdateField.setEnabled(false);

        itemStockLevelUpdateField.setEnabled(false);

        itemDescriptionUpdateField.setEnabled(false);

        updateInventoryButtonFinal.setText("UPDATE");
        updateInventoryButtonFinal.setEnabled(false);
        updateInventoryButtonFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInventoryButtonFinalActionPerformed(evt);
            }
        });

        deleteInventoryButton.setText("DELETE");
        deleteInventoryButton.setEnabled(false);
        deleteInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInventoryButtonActionPerformed(evt);
            }
        });

        notificationInventoryUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        notificationInventoryUpdateLabel.setForeground(new java.awt.Color(153, 0, 0));

        searchInventoryButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        searchInventoryButton.setText("SEARCH");
        searchInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInventoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateInventoryPanelLayout = new javax.swing.GroupLayout(updateInventoryPanel);
        updateInventoryPanel.setLayout(updateInventoryPanelLayout);
        updateInventoryPanelLayout.setHorizontalGroup(
            updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateInventoryPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemWeightUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemStockLevelUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemDescriptionUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemIDUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchInventoryButton)
                    .addComponent(deleteInventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(updateInventoryPanelLayout.createSequentialGroup()
                                .addComponent(updateInventoryButtonFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(25, 25, 25)
                                .addComponent(notificationInventoryUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itemDescriptionUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(itemStockLevelUpdateField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemWeightUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateInventoryPanelLayout.createSequentialGroup()
                                .addComponent(itemIDUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        updateInventoryPanelLayout.setVerticalGroup(
            updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateInventoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemIDUpdateLabel)
                    .addComponent(itemIDUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchInventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemWeightUpdateLabel)
                    .addComponent(itemWeightUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemStockLevelUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemStockLevelUpdateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemDescriptionUpdateLabel)
                    .addComponent(itemDescriptionUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(updateInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(notificationInventoryUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateInventoryButtonFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteInventoryButton)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        jLayeredPane1.add(updateInventoryPanel);
        updateInventoryPanel.setBounds(0, 0, 730, 340);

        customerIDCustomerUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerIDCustomerUpdateLabel.setText("Customer ID:");

        customerNameUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerNameUpdateLabel.setText("Customer Name:");

        customerAddressUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerAddressUpdateLabel.setText("Customer Address:");

        customerNameUpdateField.setEnabled(false);

        customerAddressUpdateField.setEnabled(false);

        updateCustomerButtonFinal.setText("UPDATE");
        updateCustomerButtonFinal.setEnabled(false);
        updateCustomerButtonFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCustomerButtonFinalActionPerformed(evt);
            }
        });

        notificationCustomerUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        notificationCustomerUpdateLabel.setForeground(new java.awt.Color(153, 0, 0));

        customerEmailUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerEmailUpdateLabel.setText("Customer Email:");

        customerEmailUpdateField.setEnabled(false);

        searchUpdateCustomerButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        searchUpdateCustomerButton.setText("SEARCH");
        searchUpdateCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUpdateCustomerButtonActionPerformed(evt);
            }
        });

        deleteCustomerButton.setText("DELETE");
        deleteCustomerButton.setEnabled(false);
        deleteCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateCustomerPanelLayout = new javax.swing.GroupLayout(updateCustomerPanel);
        updateCustomerPanel.setLayout(updateCustomerPanelLayout);
        updateCustomerPanelLayout.setHorizontalGroup(
            updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(customerEmailUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerAddressUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(customerNameUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerIDCustomerUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                        .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerNameUpdateField)
                            .addComponent(customerAddressUpdateField)
                            .addComponent(customerEmailUpdateField)
                            .addComponent(customerIDCustomerUpdateField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                                .addComponent(updateCustomerButtonFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(notificationCustomerUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(21, 21, 21))
                    .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                        .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchUpdateCustomerButton)
                            .addComponent(deleteCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        updateCustomerPanelLayout.setVerticalGroup(
            updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerIDCustomerUpdateLabel)
                    .addComponent(customerIDCustomerUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                        .addComponent(searchUpdateCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customerNameUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(customerNameUpdateLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(customerAddressUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                        .addComponent(customerAddressUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerEmailUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerEmailUpdateLabel))
                .addGap(18, 18, 18)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updateCustomerButtonFinal)
                    .addComponent(notificationCustomerUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteCustomerButton)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jLayeredPane1.add(updateCustomerPanel);
        updateCustomerPanel.setBounds(0, 0, 730, 340);

        shipmentIDUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shipmentIDUpdateLabel.setText("Shipment ID:");

        itemIDUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemIDUpdateShipmentLabel.setText("Item ID:");

        itemIDUpdateShipmentField.setEnabled(false);

        customerIDUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerIDUpdateShipmentLabel.setText("Customer ID:");

        customerIDUpdateShipmentField.setEnabled(false);

        updateShipmentButtonFinal.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        updateShipmentButtonFinal.setText("UPDATE");
        updateShipmentButtonFinal.setEnabled(false);
        updateShipmentButtonFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateShipmentButtonFinalActionPerformed(evt);
            }
        });

        notificationShipmentUpdateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        notificationShipmentUpdateLabel.setForeground(new java.awt.Color(153, 0, 0));

        itemDestinationUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemDestinationUpdateShipmentLabel.setText("Item Destination:");

        itemDestinationUpdateShipmentField.setEnabled(false);

        itemLocationUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemLocationUpdateShipmentLabel.setText("Item Location:");

        itemWeightUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemWeightUpdateShipmentLabel.setText("Item Weight:");

        itemCountUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        itemCountUpdateShipmentLabel.setText("Item Count:");

        trackingNumberUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        trackingNumberUpdateShipmentLabel.setText("Tracking Number:");

        carrierUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        carrierUpdateShipmentLabel.setText("Carrier:");

        signerUpdateShipmentLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        signerUpdateShipmentLabel.setText("Signer:");

        itemLocationUpdateShipmentField.setEnabled(false);

        itemWeightUpdateShipmentField.setEnabled(false);

        itemCountUpdateShipmentField.setEnabled(false);

        trackingNumberUpdateShipmentField.setEnabled(false);

        carrierUpdateShipmentField.setEnabled(false);

        signerUpdateShipmentField.setEnabled(false);

        deleteShipmentButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        deleteShipmentButton.setText("DELETE");
        deleteShipmentButton.setEnabled(false);
        deleteShipmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteShipmentButtonActionPerformed(evt);
            }
        });

        searchUpdateShipmentButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        searchUpdateShipmentButton.setText("SEARCH");
        searchUpdateShipmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUpdateShipmentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateShipmentPanelLayout = new javax.swing.GroupLayout(updateShipmentPanel);
        updateShipmentPanel.setLayout(updateShipmentPanelLayout);
        updateShipmentPanelLayout.setHorizontalGroup(
            updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateShipmentPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(signerUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(carrierUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trackingNumberUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemCountUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemWeightUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemLocationUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemDestinationUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerIDUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addComponent(itemIDUpdateShipmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(shipmentIDUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateShipmentPanelLayout.createSequentialGroup()
                        .addComponent(deleteShipmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(updateShipmentPanelLayout.createSequentialGroup()
                        .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(updateShipmentPanelLayout.createSequentialGroup()
                                .addComponent(updateShipmentButtonFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(notificationShipmentUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                            .addComponent(customerIDUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemDestinationUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemLocationUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemWeightUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemCountUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(trackingNumberUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shipmentIDUpdateField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemIDUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signerUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carrierUpdateShipmentField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateShipmentPanelLayout.createSequentialGroup()
                                .addComponent(searchUpdateShipmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(71, 71, 71))))
        );
        updateShipmentPanelLayout.setVerticalGroup(
            updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateShipmentPanelLayout.createSequentialGroup()
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shipmentIDUpdateLabel)
                    .addComponent(shipmentIDUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(searchUpdateShipmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemIDUpdateShipmentLabel)
                    .addComponent(itemIDUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerIDUpdateShipmentLabel)
                    .addComponent(customerIDUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemDestinationUpdateShipmentLabel)
                    .addComponent(itemDestinationUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemLocationUpdateShipmentLabel)
                    .addComponent(itemLocationUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemWeightUpdateShipmentLabel)
                    .addComponent(itemWeightUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCountUpdateShipmentLabel)
                    .addComponent(itemCountUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trackingNumberUpdateShipmentLabel)
                    .addComponent(trackingNumberUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carrierUpdateShipmentLabel)
                    .addComponent(carrierUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signerUpdateShipmentLabel)
                    .addComponent(signerUpdateShipmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(updateShipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateShipmentPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateShipmentButtonFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateShipmentPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(notificationShipmentUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteShipmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jLayeredPane1.add(updateShipmentPanel);
        updateShipmentPanel.setBounds(0, 0, 730, 410);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newShipmentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateShipmentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewCustomerTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateInventoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(viewInventoryTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logOutButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(updateCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(viewShipmentTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newShipmentButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateInventoryButton)
                        .addComponent(updateCustomerButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateShipmentButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(viewInventoryTableButton)
                        .addComponent(viewShipmentTableButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewCustomerTableButton)
                    .addComponent(logOutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newShipmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newShipmentButtonActionPerformed
        //set newShipmentPanel visible
        newShipmentPanel.setVisible(true);
        updateInventoryPanel.setVisible(false);
        updateCustomerPanel.setVisible(false);
        updateShipmentPanel.setVisible(false);
    }//GEN-LAST:event_newShipmentButtonActionPerformed

    private void updateInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        //set updateInventoryPanel visible
        newShipmentPanel.setVisible(false);
        updateInventoryPanel.setVisible(true);
        updateCustomerPanel.setVisible(false);
        updateShipmentPanel.setVisible(false);
        
        notificationInventoryUpdateLabel.setText("");        
        itemIDUpdateField.setText("");
        itemWeightUpdateField.setText("");
        itemStockLevelUpdateField.setText("");
        itemIDUpdateField.setText("");
        itemWeightUpdateField.setEnabled(false);
        itemStockLevelUpdateField.setEnabled(false);
        itemDescriptionUpdateField.setEnabled(false);
        updateInventoryButtonFinal.setEnabled(false);
        deleteInventoryButton.setEnabled(false);
    }                                                      

    private void updateCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCustomerButtonActionPerformed
        //set updateCustomerPanel visible
        newShipmentPanel.setVisible(false);
        updateInventoryPanel.setVisible(false);
        updateCustomerPanel.setVisible(true);
        updateShipmentPanel.setVisible(false);
        
        //clear fields and disable fields/buttons
        notificationCustomerUpdateLabel.setText("");
        customerIDCustomerUpdateField.setText("");
        customerNameUpdateField.setText("");
        customerAddressUpdateField.setText("");
        customerEmailUpdateField.setText("");
        customerNameUpdateField.setEnabled(false);
        customerAddressUpdateField.setEnabled(false);
        customerEmailUpdateField.setEnabled(false);
        updateCustomerButtonFinal.setEnabled(false);
        deleteCustomerButton.setEnabled(false);
    }//GEN-LAST:event_updateCustomerButtonActionPerformed

    private void updateShipmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateShipmentButtonActionPerformed
        //set updateShipmentPanel visible
        newShipmentPanel.setVisible(false);
        updateInventoryPanel.setVisible(false);
        updateCustomerPanel.setVisible(false);
        updateShipmentPanel.setVisible(true);
    }//GEN-LAST:event_updateShipmentButtonActionPerformed

    private void viewInventoryTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInventoryTableButtonActionPerformed
        DisplayTable frame = new DisplayTable("Inventory");
        frame.showTable();
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_viewInventoryTableButtonActionPerformed

    private void viewShipmentTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewShipmentTableButtonActionPerformed
        DisplayTable frame = new DisplayTable("Shipment");
        frame.showTable();
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_viewShipmentTableButtonActionPerformed

    private void viewCustomerTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCustomerTableButtonActionPerformed
        DisplayTable frame = new DisplayTable("Customer");
        frame.showTable();
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_viewCustomerTableButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        Shipment shipment = new Shipment();
        
        //code to check all fields are valid
        shipment.setItemID(itemIDField.getText());
        shipment.setDestination(destinationField.getText());
        shipment.setWeight(itemWeightField.getText());
        shipment.setNumItems(itemCountField.getText());
        
        String custName = customerNameField.getText();
        String address = customerAddressField.getText();
        String email = customerEmailField.getText();
        
        ArrayList<String> custInfo = new ArrayList<>();
        custInfo.add(custName);
        custInfo.add(address);
        custInfo.add(email);
        
        Customer newCust = new Customer();
        if (!newCust.custExistsEmail(email)) {
            if (!newCust.addCustomerRecord(custInfo)) {
                notificationLabel.setText("CUSTOMER NOT ADDED");
                return;
            }
        }
        
        String newID = newCust.getCustIdFromEmail(email);
        customerIDField.setText(newID);
        shipment.setCustID(newID);
        
        
        //if all fields are not valid, display error message to employee
        //notificationLabel.setText("INVALID DATA! TRY AGAIN!");
        
        //code to submit all data to the database
        if (!shipment.newShipment()) {
            notificationLabel.setText("SHIPMENT NOT ADDED");
            return;
        } else {
            shipmentIDField.setText(shipment.getShipID());
        }
        
        
        
        //clear all fields after data was successfully submitted
        /* customerNameField.setText("");
        customerIDField.setText("");
        customerAddressField.setText("");
        customerEmailField.setText("");
        itemIDField.setText("");
        destinationField.setText("");
        itemWeightField.setText("");
        itemCountField.setText(""); */
        //display notification to the employee that data was successfully submitted
        notificationLabel.setText("SUCCESSFULLY SUBMITTED!");
    }//GEN-LAST:event_submitButtonActionPerformed

    private void clearAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllButtonActionPerformed
        //clear all fields
        customerNameField.setText("");
        customerIDField.setText("");
        customerAddressField.setText("");
        customerEmailField.setText("");
        itemIDField.setText("");
        destinationField.setText("");
        itemWeightField.setText("");
        itemCountField.setText("");
        shipmentIDField.setText("");
        //display notification to the employee that all fields are cleared
        notificationLabel.setText("ALL FIELDS CLEARED!");
    }//GEN-LAST:event_clearAllButtonActionPerformed

    private void updateInventoryButtonFinalActionPerformed(java.awt.event.ActionEvent evt) {                                                           
        notificationShipmentUpdateLabel.setText("");
        Inventory update = new Inventory();
        
        //code to check all fields are valid
        update.setItemID(itemIDUpdateField.getText());
        update.setDescription(itemDescriptionUpdateField.getText());
        update.setStockLevel(itemStockLevelUpdateField.getText());
        update.setWeight(itemWeightUpdateField.getText());
        
        //if all fields are not valid, display error message to employee
        //code to submit updated data to the database
        if (!update.itemExists(update.getItemID())) {
            notificationCustomerUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
            return;
        }
        
        if (!update.updateItem()) {
            notificationCustomerUpdateLabel.setText("Item not updated!");
            return;
        }
        
        //clear fields and disable fields/buttons
        itemIDUpdateField.setText("");
        itemWeightUpdateField.setText("");
        itemStockLevelUpdateField.setText("");
        itemDescriptionUpdateField.setText("");
        itemWeightUpdateField.setEnabled(false);
        itemStockLevelUpdateField.setEnabled(false);
        itemDescriptionUpdateField.setEnabled(false);
        updateInventoryButtonFinal.setEnabled(false);
        deleteInventoryButton.setEnabled(false);
        
        //display notification to the employee that data was successfully updated
        notificationInventoryUpdateLabel.setText("SUCCESSFULLY UPDATED!");
    }                                                           

    private void deleteInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        //code to check all fields are valid
        Inventory item = new Inventory();
        item.setItemID(itemIDUpdateField.getText());
        
        //if all fields are not valid, display error message to employee
        if (!item.itemExists(item.getItemID())){ 
            notificationInventoryUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
            return;
        } else {
            int n = JOptionPane.showConfirmDialog(null,"Are you sure you want to\n"
                    + "delete item with id = " + item.getItemID() ,"Delete item?", 
                    JOptionPane.OK_CANCEL_OPTION);
            if (n == JOptionPane.OK_OPTION) { item.deleteItem(item.getItemID()); } 
            else if (n == JOptionPane.CANCEL_OPTION) { return; }
        }
        
        //if all fields are valid, code to delete data from the database
        
        //clear fields and disable fields/buttons
        itemIDUpdateField.setText("");
        itemWeightUpdateField.setText("");
        itemStockLevelUpdateField.setText("");
        itemDescriptionUpdateField.setText("");
        itemWeightUpdateField.setEnabled(false);
        itemStockLevelUpdateField.setEnabled(false);
        itemDescriptionUpdateField.setEnabled(false);
        updateInventoryButtonFinal.setEnabled(false);
        deleteInventoryButton.setEnabled(false);
        //display notification to the employee that data was successfully deleted
        notificationInventoryUpdateLabel.setText("SUCCESSFULLY DELETED!");
    }                                                      

    private void updateCustomerButtonFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCustomerButtonFinalActionPerformed
        
        notificationCustomerUpdateLabel.setText(" ");

        //code to check all fields are valid
        String id = customerIDCustomerUpdateField.getText();
        String name = customerNameUpdateField.getText();
        String address = customerAddressUpdateField.getText();
        String email = customerEmailUpdateField.getText();
        
        
        
        //if all fields are not valid, display error message to employee
        //notificationCustomerUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
        
        //code to submit updated data to the database  
        Customer cust = new Customer();
        if(!cust.custExists(id)){
            notificationCustomerUpdateLabel.setText("Customer ID not found!");
            return;
        }
        ArrayList<String> custInfo = new ArrayList<String>();        
        custInfo.add(id);
        custInfo.add(name);
        custInfo.add(address);
        custInfo.add(email);
        
        if(!cust.updateCustomer(custInfo)){
            notificationCustomerUpdateLabel.setText("Customer not updated!");
            return;
        }
        
        //clear fields and disable fields/buttons
        customerIDCustomerUpdateField.setText("");
        customerNameUpdateField.setText("");
        customerAddressUpdateField.setText("");
        customerEmailUpdateField.setText("");
        customerNameUpdateField.setEnabled(false);
        customerAddressUpdateField.setEnabled(false);
        customerEmailUpdateField.setEnabled(false);
        updateCustomerButtonFinal.setEnabled(false);
        deleteCustomerButton.setEnabled(false);
        //display notification to the employee that data was successfully updated
        notificationCustomerUpdateLabel.setText("SUCCESSFULLY UPDATED!");
    }//GEN-LAST:event_updateCustomerButtonFinalActionPerformed

    private void updateShipmentButtonFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateShipmentButtonFinalActionPerformed
        notificationShipmentUpdateLabel.setText("");
        Shipment shipment = new Shipment();
        //code to check all fields are valid
        //if all fields are not valid, display error message to employee
        if (!shipment.findShipment(shipmentIDUpdateField.getText())) {
            notificationShipmentUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
            return;
        }
        
        //code to submit updated data to the database
        shipment.setShipID(shipmentIDUpdateField.getText());
        shipment.setItemID(itemIDUpdateShipmentField.getText());
        shipment.setCustID(customerIDUpdateShipmentField.getText());
        shipment.setDestination(itemDestinationUpdateShipmentField.getText());
        shipment.setLocation(itemLocationUpdateShipmentField.getText());
        shipment.setWeight(itemWeightUpdateShipmentField.getText());
        shipment.setNumItems(itemCountUpdateShipmentField.getText());
        shipment.setTrackingNum(trackingNumberUpdateShipmentField.getText());
        shipment.setCarrier(carrierUpdateShipmentField.getText());
        shipment.setSigner(signerUpdateShipmentField.getText());
        
        if (!shipment.updateShipment()) {
            notificationCustomerUpdateLabel.setText("SHIPMENT NOT UPDATED!");
            return;
        }
        
        //clear fields and disable fields/buttons
        shipmentIDUpdateField.setText("");
        itemIDUpdateShipmentField.setText("");
        customerIDUpdateShipmentField.setText("");
        itemDestinationUpdateShipmentField.setText("");
        itemLocationUpdateShipmentField.setText("");
        itemWeightUpdateShipmentField.setText("");
        itemCountUpdateShipmentField.setText("");
        trackingNumberUpdateShipmentField.setText("");
        carrierUpdateShipmentField.setText("");
        signerUpdateShipmentField.setText("");
        itemIDUpdateShipmentField.setEnabled(false);
        customerIDUpdateShipmentField.setEnabled(false);
        itemDestinationUpdateShipmentField.setEnabled(false);
        itemLocationUpdateShipmentField.setEnabled(false);
        itemWeightUpdateShipmentField.setEnabled(false);
        itemCountUpdateShipmentField.setEnabled(false);
        trackingNumberUpdateShipmentField.setEnabled(false);
        carrierUpdateShipmentField.setEnabled(false);
        signerUpdateShipmentField.setEnabled(false);
        updateShipmentButtonFinal.setEnabled(false);
        deleteShipmentButton.setEnabled(false);
        //display notification to the employee that data was successfully updated
        notificationShipmentUpdateLabel.setText("SUCCESSFULLY UPDATED!");
    }//GEN-LAST:event_updateShipmentButtonFinalActionPerformed

    private void searchUpdateCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUpdateCustomerButtonActionPerformed
        //code to check search field is valid
        String custID = customerIDCustomerUpdateField.getText();
        Customer cust = new Customer();
        HashMap<String, String> custInfo = new HashMap();
        //if search field is not valid, display error message to employee
        //notificationCustomerUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
        if(!cust.custExists(custID)){
            notificationCustomerUpdateLabel.setText("Customer not found!");
            return;
        }else{
            custInfo = cust.retrieveCust(custID);
        }
        
        //if search field is valid, enable and populate associated fields/buttons to update information
        customerNameUpdateField.setEnabled(true);
        customerNameUpdateField.setText(custInfo.get("Name"));
        customerAddressUpdateField.setEnabled(true);
        customerAddressUpdateField.setText(custInfo.get("Address"));
        customerEmailUpdateField.setEnabled(true);
        customerEmailUpdateField.setText(custInfo.get("Email"));
        updateCustomerButtonFinal.setEnabled(true);
        deleteCustomerButton.setEnabled(true);
    }//GEN-LAST:event_searchUpdateCustomerButtonActionPerformed

    private void deleteCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerButtonActionPerformed
        
        Customer cust = new Customer();
        String custID = customerIDCustomerUpdateField.getText();
        
        //code to check all fields are valid
        
        //if all fields are not valid, display error message to employee
        //notificationCustomerUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
        
        //if all fields are valid, code to delete data from the database
        if (!cust.custExists(custID)) {
            notificationCustomerUpdateLabel.setText("Customer not found!");
            return;
        } else {
            int n = JOptionPane.showConfirmDialog(null,"Are you sure you want to\n"
                    + "delete customer with id = " + custID ,"Delete Customer?", 
                    JOptionPane.OK_CANCEL_OPTION);
            if (n == JOptionPane.OK_OPTION) { cust.deleteCustomer(custID); }
            else if (n == JOptionPane.CANCEL_OPTION) { return; }
        }
        
        
        //clear fields and disable fields/buttons
        customerIDCustomerUpdateField.setText("");
        customerNameUpdateField.setText("");
        customerAddressUpdateField.setText("");
        customerEmailUpdateField.setText("");
        customerNameUpdateField.setEnabled(false);
        customerAddressUpdateField.setEnabled(false);
        customerEmailUpdateField.setEnabled(false);
        updateCustomerButtonFinal.setEnabled(false);
        deleteCustomerButton.setEnabled(false);
        //display notification to the employee that data was successfully deleted
        notificationCustomerUpdateLabel.setText("SUCCESSFULLY DELETED!");
    }//GEN-LAST:event_deleteCustomerButtonActionPerformed

    private void searchInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInventoryButtonActionPerformed
        notificationInventoryUpdateLabel.setText("");
        Inventory inventory = new Inventory();
        
        //code to check search field is valid
        inventory.setItemID(itemIDUpdateField.getText());
        
        //if search field is not valid, display error message to employee
        if (!inventory.itemExists(inventory.getItemID())) {
            notificationInventoryUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
        } else {
            //if search field is valid, enable and populate associated fields/buttons to update information
            itemWeightUpdateField.setEnabled(true);
            itemStockLevelUpdateField.setEnabled(true);
            itemDescriptionUpdateField.setEnabled(true);
            updateInventoryButtonFinal.setEnabled(true);
            deleteInventoryButton.setEnabled(true);
            
            inventory.retrieveItem(inventory.getItemID());
            itemWeightUpdateField.setText(inventory.getWeight());
            itemStockLevelUpdateField.setText(inventory.getStockLevel());
            itemDescriptionUpdateField.setText(inventory.getDescription());
        }
    }//GEN-LAST:event_searchInventoryButtonActionPerformed

    private void searchUpdateShipmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUpdateShipmentButtonActionPerformed
        //code to check search field is valid
        Shipment shpmt = new Shipment();
        String id = shipmentIDUpdateField.getText();
        System.out.println("Searching for: " + id);
        if (!shpmt.findShipment(id)) {
            notificationShipmentUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
        }
        // System.out.println(shpmt.findShipment(id));
        // if search field is valid, enable and populate associated fields/buttons to update information
        shipmentIDUpdateField.setEnabled(true);
        itemIDUpdateShipmentField.setEnabled(true);
        customerIDUpdateShipmentField.setEnabled(true);
        itemDestinationUpdateShipmentField.setEnabled(true);
        itemLocationUpdateShipmentField.setEnabled(true);
        itemWeightUpdateShipmentField.setEnabled(true);
        itemCountUpdateShipmentField.setEnabled(true);
        trackingNumberUpdateShipmentField.setEnabled(true);
        carrierUpdateShipmentField.setEnabled(true);
        signerUpdateShipmentField.setEnabled(true);
        updateShipmentButtonFinal.setEnabled(true);
        deleteShipmentButton.setEnabled(true);
        
        shpmt.getShipment(id);        
        itemIDUpdateShipmentField.setText(shpmt.getItemID());
        customerIDUpdateShipmentField.setText(shpmt.getCustID());
        itemDestinationUpdateShipmentField.setText(shpmt.getDestination());
        itemLocationUpdateShipmentField.setText(shpmt.getLocation());
        itemWeightUpdateShipmentField.setText(shpmt.getWeight());
        itemCountUpdateShipmentField.setText(shpmt.getNumItems());
        trackingNumberUpdateShipmentField.setText(shpmt.getTrackingNum());
        carrierUpdateShipmentField.setText(shpmt.getCarrier());
        signerUpdateShipmentField.setText(shpmt.getSigner());
    }//GEN-LAST:event_searchUpdateShipmentButtonActionPerformed

    private void deleteShipmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteShipmentButtonActionPerformed
        notificationShipmentUpdateLabel.setText("");
        String id = shipmentIDUpdateField.getText();
        Shipment delShipment = new Shipment();
        //code to check all fields are valid
        if (delShipment.findShipment(id)) {
            int n = JOptionPane.showConfirmDialog(null,"Are you sure you want to\n"
                        + "delete the shipment with id = " + id.trim() ,"Delete shipment?", 
                        JOptionPane.OK_CANCEL_OPTION);
            // if all fields are valid, code to delete data from the database
            if (n == JOptionPane.OK_OPTION) delShipment.deleteShipment(id);
            else return;
        } else {
            //if all fields are not valid, display error message to employee
            notificationShipmentUpdateLabel.setText("INVALID DATA! TRY AGAIN!");
            return;
        }
        
        //clear fields and disable fields/buttons
        shipmentIDUpdateField.setText("");
        itemIDUpdateShipmentField.setText("");
        customerIDUpdateShipmentField.setText("");
        itemDestinationUpdateShipmentField.setText("");
        itemLocationUpdateShipmentField.setText("");
        itemWeightUpdateShipmentField.setText("");
        itemCountUpdateShipmentField.setText("");
        trackingNumberUpdateShipmentField.setText("");
        carrierUpdateShipmentField.setText("");
        signerUpdateShipmentField.setText("");
        itemIDUpdateShipmentField.setEnabled(false);
        customerIDUpdateShipmentField.setEnabled(false);
        itemDestinationUpdateShipmentField.setEnabled(false);
        itemLocationUpdateShipmentField.setEnabled(false);
        itemWeightUpdateShipmentField.setEnabled(false);
        itemCountUpdateShipmentField.setEnabled(false);
        trackingNumberUpdateShipmentField.setEnabled(false);
        carrierUpdateShipmentField.setEnabled(false);
        signerUpdateShipmentField.setEnabled(false);
        updateShipmentButtonFinal.setEnabled(false);
        deleteShipmentButton.setEnabled(false);
        //display notification to the employee that data was successfully deleted
        notificationShipmentUpdateLabel.setText("SUCCESSFULLY DELETED!");
    }//GEN-LAST:event_deleteShipmentButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField carrierUpdateShipmentField;
    private javax.swing.JLabel carrierUpdateShipmentLabel;
    private javax.swing.JButton clearAllButton;
    private javax.swing.JLabel customerAddressButton;
    private javax.swing.JTextField customerAddressField;
    private javax.swing.JTextField customerAddressUpdateField;
    private javax.swing.JLabel customerAddressUpdateLabel;
    private javax.swing.JTextField customerEmailField;
    private javax.swing.JLabel customerEmailLabel;
    private javax.swing.JTextField customerEmailUpdateField;
    private javax.swing.JLabel customerEmailUpdateLabel;
    private javax.swing.JTextField customerIDCustomerUpdateField;
    private javax.swing.JLabel customerIDCustomerUpdateLabel;
    private javax.swing.JTextField customerIDField;
    private javax.swing.JLabel customerIDLabel;
    private javax.swing.JTextField customerIDUpdateShipmentField;
    private javax.swing.JLabel customerIDUpdateShipmentLabel;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JTextField customerNameUpdateField;
    private javax.swing.JLabel customerNameUpdateLabel;
    private javax.swing.JButton deleteCustomerButton;
    private javax.swing.JButton deleteInventoryButton;
    private javax.swing.JButton deleteShipmentButton;
    private javax.swing.JTextField destinationField;
    private javax.swing.JLabel destinationLabel;
    private javax.swing.JLabel itemCountButton;
    private javax.swing.JTextField itemCountField;
    private javax.swing.JTextField itemCountUpdateShipmentField;
    private javax.swing.JLabel itemCountUpdateShipmentLabel;
    private javax.swing.JTextField itemDescriptionUpdateField;
    private javax.swing.JLabel itemDescriptionUpdateLabel;
    private javax.swing.JTextField itemDestinationUpdateShipmentField;
    private javax.swing.JLabel itemDestinationUpdateShipmentLabel;
    private javax.swing.JLabel itemIDButton;
    private javax.swing.JTextField itemIDField;
    private javax.swing.JTextField itemIDUpdateField;
    private javax.swing.JLabel itemIDUpdateLabel;
    private javax.swing.JTextField itemIDUpdateShipmentField;
    private javax.swing.JLabel itemIDUpdateShipmentLabel;
    private javax.swing.JTextField itemLocationUpdateShipmentField;
    private javax.swing.JLabel itemLocationUpdateShipmentLabel;
    private javax.swing.JTextField itemStockLevelUpdateField;
    private javax.swing.JLabel itemStockLevelUpdateLabel;
    private javax.swing.JLabel itemWeightButton;
    private javax.swing.JTextField itemWeightField;
    private javax.swing.JTextField itemWeightUpdateField;
    private javax.swing.JLabel itemWeightUpdateLabel;
    private javax.swing.JTextField itemWeightUpdateShipmentField;
    private javax.swing.JLabel itemWeightUpdateShipmentLabel;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton newShipmentButton;
    private javax.swing.JPanel newShipmentPanel;
    private javax.swing.JLabel notificationCustomerUpdateLabel;
    private javax.swing.JLabel notificationInventoryUpdateLabel;
    private javax.swing.JLabel notificationLabel;
    private javax.swing.JLabel notificationShipmentUpdateLabel;
    private javax.swing.JButton searchInventoryButton;
    private javax.swing.JButton searchUpdateCustomerButton;
    private javax.swing.JButton searchUpdateShipmentButton;
    private javax.swing.JTextField shipmentIDField;
    private javax.swing.JLabel shipmentIDLabel;
    private javax.swing.JTextField shipmentIDUpdateField;
    private javax.swing.JLabel shipmentIDUpdateLabel;
    private javax.swing.JTextField signerUpdateShipmentField;
    private javax.swing.JLabel signerUpdateShipmentLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel tableLabel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JTextField trackingNumberUpdateShipmentField;
    private javax.swing.JLabel trackingNumberUpdateShipmentLabel;
    private javax.swing.JButton updateCustomerButton;
    private javax.swing.JButton updateCustomerButtonFinal;
    private javax.swing.JPanel updateCustomerPanel;
    private javax.swing.JButton updateInventoryButton;
    private javax.swing.JButton updateInventoryButtonFinal;
    private javax.swing.JPanel updateInventoryPanel;
    private javax.swing.JButton updateShipmentButton;
    private javax.swing.JButton updateShipmentButtonFinal;
    private javax.swing.JPanel updateShipmentPanel;
    private javax.swing.JButton viewCustomerTableButton;
    private javax.swing.JButton viewInventoryTableButton;
    private javax.swing.JButton viewShipmentTableButton;
    // End of variables declaration//GEN-END:variables
}
